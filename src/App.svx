<script>
  import Masonry from './Masonry.svelte'
  import Slider from './Slider.svelte'
  import Box from './Box.svelte'

  let nItems = 30
  $: items = Array(nItems)
    .fill(null)
    .map((_, idx) => idx + 1)
  let [minColWidth, maxColWidth] = [330, 500]
  let gap = 20
  let width, height
</script>

# Svelte Masonry

This is a naive masonry implementation without column balancing. Source code on
[GitHub](https://github.com/janosh/svelte-masonry).

<small>
Balanced columns can be achieved even with this simple version if the items are allowed to stretch to the column height.
</small>

<div class="controls">
  <Slider label="nItems" bind:value={nItems} min="1" max="100" />
  <Slider label="minColWidth" bind:value={minColWidth} min="10" max={maxColWidth} />
  <Slider label="maxColWidth" bind:value={maxColWidth} min={minColWidth} max="800" />
  <Slider label="gap" bind:value={gap} min="0" max="50" />
</div>

Masonry size: <span>{width}px</span> &times; <span>{height}px</span> (w &times; h)

<Masonry {items} {minColWidth} {maxColWidth} {gap} let:item bind:width bind:height>
<Box {item} />
</Masonry>

<style>
  :global(body) {
    background: #090019;
    padding: 2em;
    font-family: -apple-system, BlinkMacSystemFont, Roboto, 'Helvetica Neue', sans-serif;
    color: white;
    text-align: center;
    font-size: 3ex;
  }
  :global(a) {
    color: #0075ff;
    text-decoration: none;
  }
  :global(a):hover {
    color: orange;
  }
  h1 {
    font-size: calc(1em + 3vw);
  }
  .controls {
    display: flex;
    flex-wrap: wrap;
    margin: 3em auto;
    gap: 1em;
    place-content: center;
  }
  span {
    padding: 1pt 5pt;
    border-radius: 4pt;
    vertical-align: middle;
    background: #0075ff;
  }
</style>
